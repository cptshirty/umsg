// Generated with umsg_gen on {{ date }}
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include <umsg_types.h>
#include <umsg_classes.h>



// api function headers
{% for msg_dict in topic_dict.msgs %}
{% set prefix = topic_dict.name+'_'+msg_dict.name %}
umsg_sub_handle_t umsg_{{prefix}}_subscribe(uint32_t prescaler, uint8_t length);
umsg_sub_handle_t umsg_{{prefix}}_subscribe_ch(uint32_t prescaler, uint8_t length, uint8_t channel);
void umsg_{{prefix}}_publish(umsg_{{prefix}}_t* data);
void umsg_{{prefix}}_publish_ch(umsg_{{prefix}}_t* data, uint8_t channel);
uint8_t umsg_{{prefix}}_receive(umsg_sub_handle_t queue, umsg_{{prefix}}_t* data, uint32_t timeout);
uint8_t umsg_{{prefix}}_peek(umsg_{{prefix}}_t* data);


{%if log == "do_log"%}
//function headers for converting to binary format that can be used for message passing or logging the first symbols in the buffer indicate the message class and type
//for now lets assume that there are less than 255 message classes and 255 message types per class, this has to be fixed in the future
//please take care that the messages are build properly to avoid padding issues if the messages are opened on different system
// this method automatically appends the CRC to the struct
uint32_t umsg_{{prefix}}_receive_to_transfer(umsg_sub_handle_t queue,MessageToTransfer* msg);


/*
*/
{% endif %}

{% endfor %}



#ifdef __cplusplus
}
#endif


