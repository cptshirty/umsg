// Generated with umsg_gen on {{ date }}
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include <umsg_types.h>

typedef enum
{
{% for topic_dict in topic_dict_list%}
UMSG_{{topic_dict.name.upper()}}{{ "," if not loop.last else "" }}
{%endfor%}
} umsg_classes_t;

// the plus one is there for a CRC checksum


//all the topic lists included

{% for topic_dict in topic_dict_list%}
{% macro type_map(type) %}
{%- if type.lower()=="uint8" -%}
uint8_t
{%- elif type.lower()=="int8" -%}
int8_t
{%- elif type.lower()=="uint16" -%}
uint16_t
{%- elif type.lower()=="int16" -%}
int16_t
{%- elif type.lower()=="uint32" -%}
uint32_t
{%- elif type.lower()=="int32" -%}
int32_t
{%- elif type.lower()=="uint64" -%}
uint64_t
{%- elif type.lower()=="int64" -%}
int64_t
{%- elif type.lower()=="float" -%}
float
{%- elif type.lower()=="double" -%}
double
{%- elif type.lower()=="bool" -%}
bool
{%- elif type.lower()=="char" -%}
char
{%- else -%}
umsg_{{topic_dict.name}}_{{type.lower()}}_t
{%- endif%}
{% endmacro %}
    // msg structure typedefs for {{topic_dict.name}}
    {%if topic_dict.enums %}

    {% for enum in topic_dict.enums%}
    typedef enum __attribute__((__packed__))
    {
        {%for val in enum.enumerators%}
        {{val.upper()}}{{ "," if not loop.last else "" }}
        {%endfor%}
    } umsg_{{topic_dict.name}}_{{enum.name}}_t;

    {%endfor%}
    {% endif %}

    //enumeration of topics
    typedef enum
    {
    {% for msg_dict in topic_dict.msgs %}
        {{topic_dict.name.upper()}}_{{msg_dict.name.upper()}}{{', ' if not loop.last else ''}}
    {% endfor -%}
    } umsg_enum_{{topic_dict.name}}_t;



    {% for msg_dict in topic_dict.msgs %}
    typedef struct
    {
        {% for field in msg_dict.fields %}
        {%+ if not field.bitfield %}{{type_map(field.type)}} {{field.name}}{% if field.length %}[{{field.length}}]{% endif %};{% endif %}
        {% if field.bitfield %}{{type_map(field.type)}} {%for bitfield in field.bitfield %}{{bitfield.name}} : {{bitfield.bits}}{{ ", " if not loop.last else ";" }}{%endfor%}{% endif +%}
        {% endfor %}
    } umsg_{{topic_dict.name}}_{{msg_dict.name}}_t;

    {% endfor -%}

    union umsg_{{topic_dict.name}}_Messages
    {
    {% for msg_dict in topic_dict.msgs %}
        umsg_{{topic_dict.name}}_{{msg_dict.name}}_t {{msg_dict.name}};
    {% endfor -%}
    };
{%endfor%}

struct Structured{
    uint8_t sync0;
    uint8_t sync1;
    uint8_t msg_class;
    uint8_t msg_type;
    union{
        {% for topic_dict in topic_dict_list%}
        union umsg_{{topic_dict.name}}_Messages {{topic_dict.name}};
        {%endfor%}
    };
};


typedef union {
    struct Structured s;
    uint8_t raw[sizeof(struct Structured) + 1];

}MessageToTransfer;


// this method only publishes the message if the CRC is correct
uint32_t umsg_publish_received(MessageToTransfer* msg);






#ifdef __cplusplus
}
#endif



